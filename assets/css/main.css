/*! tailwindcss v4.1.1 | MIT License | https://tailwindcss.com */
@supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
  @layer base {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-content: "";
    }
  }
}
@font-face {
  font-family: "Proxima Nova";
  font-style: normal;
  font-weight: 700;
  font-display: block;
  src: url(/assets/fonts/proximanova/proximanova-bold.woff2) format("woff2"), url(/assets/fonts/proximanova/proximanova-bold.woff) format("woff");
}
@font-face {
  font-family: "Proxima Nova";
  font-style: normal;
  font-weight: 400;
  font-display: block;
  src: url(/assets/fonts/proximanova/proximanova-regular.woff2) format("woff2"), url(/assets/fonts/proximanova/proximanova-regular.woff) format("woff");
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --container-md: 28rem;
    --container-xl: 36rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --font-weight-bold: 700;
    --tracking-wide: 0.025em;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --default-font-family: var(--font-sans);
    --color-white: #ffffff;
    --color-blue: #5266df;
    --color-blue-700: #242946;
    --color-blue-900: #080a16;
    --color-red: #fb5859;
    --color-gray: #96979b;
    --color-gray-200: #e6e7e8;
    --color-gray-300: #c8c9cb;
    --color-gray-500: #78797e;
    --font-sans: 'Proxima nova', ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
    --text-xs: 0.79rem;
    --text-sm: 0.889rem;
    --text-base: 1.125rem;
    --text-lg: 1.266rem;
    --text-xl: 1.424rem;
    --text-2xl: 1.602rem;
    --text-3xl: 2.027rem;
    --text-4xl: 3.247rem;
    --text-xs--line-height: 1.6;
    --text-sm--line-height: 1.6;
    --text-base--line-height: 1.45;
    --text-xl--line-height: 1.2;
    --text-2xl--line-height: 1.2;
    --text-3xl--line-height: 1;
    --text-4xl--line-height: 1;
    --spacing-0: 0;
    --spacing-2: 0.5rem;
    --spacing-3: 0.75rem;
    --spacing-4: 1rem;
    --spacing-5: 1.25rem;
    --spacing-6: 1.5rem;
    --spacing-7: 2rem;
    --spacing-8: 3rem;
    --spacing-9: 4rem;
    --spacing-10: clamp(2rem, 2vw, 5rem);
    --spacing-11: clamp(3rem, 4vw, 6rem);
    --spacing-15: clamp(4rem, 6vw, 10rem);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\@container\/download {
    container-type: inline-size;
    container-name: download;
  }
  .\@container\/faqs {
    container-type: inline-size;
    container-name: faqs;
  }
  .\@container\/features {
    container-type: inline-size;
    container-name: features;
  }
  .\@container\/footer {
    container-type: inline-size;
    container-name: footer;
  }
  .\@container\/form-newsletter {
    container-type: inline-size;
    container-name: form-newsletter;
  }
  .\@container\/header {
    container-type: inline-size;
    container-name: header;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .top-0 {
    top: var(--spacing-0);
  }
  .left-0 {
    left: var(--spacing-0);
  }
  .z-1 {
    z-index: 1;
  }
  .z-2 {
    z-index: 2;
  }
  .order-1 {
    order: 1;
  }
  .order-2 {
    order: 2;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .container {
    margin-inline: auto;
    padding-inline: 2rem;
  }
  .mx-8 {
    margin-inline: var(--spacing-8);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-3 {
    margin-block: var(--spacing-3);
  }
  .my-4 {
    margin-block: var(--spacing-4);
  }
  .my-5 {
    margin-block: var(--spacing-5);
  }
  .my-7 {
    margin-block: var(--spacing-7);
  }
  .my-8 {
    margin-block: var(--spacing-8);
  }
  .my-10 {
    margin-block: var(--spacing-10);
  }
  .mt-6 {
    margin-top: var(--spacing-6);
  }
  .mb-9 {
    margin-bottom: var(--spacing-9);
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .h-1\/2 {
    height: calc(1/2 * 100%);
  }
  .h-\[\.5rem\] {
    height: .5rem;
  }
  .h-\[1\.5rem\] {
    height: 1.5rem;
  }
  .h-\[1rem\] {
    height: 1rem;
  }
  .h-dvh {
    height: 100dvh;
  }
  .w-\[90\%\] {
    width: 90%;
  }
  .w-dvw {
    width: 100dvw;
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-2 {
    gap: var(--spacing-2);
  }
  .gap-3 {
    gap: var(--spacing-3);
  }
  .gap-4 {
    gap: var(--spacing-4);
  }
  .gap-7 {
    gap: var(--spacing-7);
  }
  .overflow-y-hidden {
    overflow-y: hidden;
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-blue {
    border-color: var(--color-blue);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-500 {
    border-color: var(--color-gray-500);
  }
  .border-red {
    border-color: var(--color-red);
  }
  .bg-blue {
    background-color: var(--color-blue);
  }
  .bg-blue-700 {
    background-color: var(--color-blue-700);
  }
  .bg-blue-900\/90 {
    background-color: color-mix(in srgb, #080a16 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-900) 90%, transparent);
    }
  }
  .bg-red {
    background-color: var(--color-red);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .fill-blue-900 {
    fill: var(--color-blue-900);
  }
  .fill-white {
    fill: var(--color-white);
  }
  .stroke-blue {
    stroke: var(--color-blue);
  }
  .p-10 {
    padding: var(--spacing-10);
  }
  .px-3 {
    padding-inline: var(--spacing-3);
  }
  .px-4 {
    padding-inline: var(--spacing-4);
  }
  .px-6 {
    padding-inline: var(--spacing-6);
  }
  .px-7 {
    padding-inline: var(--spacing-7);
  }
  .py-2 {
    padding-block: var(--spacing-2);
  }
  .py-3 {
    padding-block: var(--spacing-3);
  }
  .py-4 {
    padding-block: var(--spacing-4);
  }
  .py-5 {
    padding-block: var(--spacing-5);
  }
  .py-6 {
    padding-block: var(--spacing-6);
  }
  .py-10 {
    padding-block: var(--spacing-10);
  }
  .py-11 {
    padding-block: var(--spacing-11);
  }
  .py-15 {
    padding-block: var(--spacing-15);
  }
  .pe-6 {
    padding-inline-end: var(--spacing-6);
  }
  .pt-\[6rem\] {
    padding-top: 6rem;
  }
  .pt-\[8rem\] {
    padding-top: 8rem;
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .tracking-\[\.25em\] {
    --tw-tracking: .25em;
    letter-spacing: .25em;
  }
  .tracking-wide {
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }
  .text-blue-900 {
    color: var(--color-blue-900);
  }
  .text-gray-300 {
    color: var(--color-gray-300);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-gray-300\/100 {
    --tw-shadow-color: color-mix(in srgb, color-mix(in srgb, #c8c9cb 100%, transparent) var(--tw-shadow-alpha), transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-300) 100%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .brightness-1000 {
    --tw-brightness: brightness(1000%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .marker\:content-\[\'\'\] {
    & *::marker {
      --tw-content: '';
      content: var(--tw-content);
    }
    &::marker {
      --tw-content: '';
      content: var(--tw-content);
    }
    & *::-webkit-details-marker {
      --tw-content: '';
      content: var(--tw-content);
    }
    &::-webkit-details-marker {
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:top-0 {
    &::after {
      content: var(--tw-content);
      top: var(--spacing-0);
    }
  }
  .after\:right-0 {
    &::after {
      content: var(--tw-content);
      right: var(--spacing-0);
    }
  }
  .after\:bottom-0 {
    &::after {
      content: var(--tw-content);
      bottom: var(--spacing-0);
    }
  }
  .after\:bottom-\[25\%\] {
    &::after {
      content: var(--tw-content);
      bottom: 25%;
    }
  }
  .after\:bottom-\[55\%\] {
    &::after {
      content: var(--tw-content);
      bottom: 55%;
    }
  }
  .after\:left-0 {
    &::after {
      content: var(--tw-content);
      left: var(--spacing-0);
    }
  }
  .after\:-z-1 {
    &::after {
      content: var(--tw-content);
      z-index: calc(1 * -1);
    }
  }
  .after\:z-0 {
    &::after {
      content: var(--tw-content);
      z-index: 0;
    }
  }
  .after\:block {
    &::after {
      content: var(--tw-content);
      display: block;
    }
  }
  .after\:h-1\/3 {
    &::after {
      content: var(--tw-content);
      height: calc(1/3 * 100%);
    }
  }
  .after\:h-2\/3 {
    &::after {
      content: var(--tw-content);
      height: calc(2/3 * 100%);
    }
  }
  .after\:h-\[\'240px\'\] {
    &::after {
      content: var(--tw-content);
      height: '240px';
    }
  }
  .after\:h-\[240px\] {
    &::after {
      content: var(--tw-content);
      height: 240px;
    }
  }
  .after\:w-1\/3 {
    &::after {
      content: var(--tw-content);
      width: calc(1/3 * 100%);
    }
  }
  .after\:w-2\/3 {
    &::after {
      content: var(--tw-content);
      width: calc(2/3 * 100%);
    }
  }
  .after\:w-\[\'300px\'\] {
    &::after {
      content: var(--tw-content);
      width: '300px';
    }
  }
  .after\:w-\[300px\] {
    &::after {
      content: var(--tw-content);
      width: 300px;
    }
  }
  .after\:rounded-b-\[50\%\] {
    &::after {
      content: var(--tw-content);
      border-bottom-right-radius: 50%;
      border-bottom-left-radius: 50%;
    }
  }
  .after\:rounded-b-md {
    &::after {
      content: var(--tw-content);
      border-bottom-right-radius: var(--radius-md);
      border-bottom-left-radius: var(--radius-md);
    }
  }
  .after\:rounded-br-\[50\%\] {
    &::after {
      content: var(--tw-content);
      border-bottom-right-radius: 50%;
    }
  }
  .after\:rounded-bl-\[50\%\] {
    &::after {
      content: var(--tw-content);
      border-bottom-left-radius: 50%;
    }
  }
  .after\:bg-blue {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-blue);
    }
  }
  .after\:content-\[\'\'\] {
    &::after {
      content: var(--tw-content);
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .open\:stroke-red {
    &:is([open], :popover-open, :open) {
      stroke: var(--color-red);
    }
  }
  .hover\:border-blue {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-blue);
      }
    }
  }
  .hover\:border-gray-500 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-500);
      }
    }
  }
  .hover\:border-red {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-red);
      }
    }
  }
  .hover\:bg-transparent {
    &:hover {
      @media (hover: hover) {
        background-color: transparent;
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:fill-red {
    &:hover {
      @media (hover: hover) {
        fill: var(--color-red);
      }
    }
  }
  .hover\:text-blue {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue);
      }
    }
  }
  .hover\:text-gray-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-500);
      }
    }
  }
  .hover\:text-red {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red);
      }
    }
  }
  .hover\:shadow-none {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .md\:inline-block {
    @media (width >= 48rem) {
      display: inline-block;
    }
  }
  .lg\:static {
    @media (width >= 64rem) {
      position: static;
    }
  }
  .lg\:order-1 {
    @media (width >= 64rem) {
      order: 1;
    }
  }
  .lg\:order-2 {
    @media (width >= 64rem) {
      order: 2;
    }
  }
  .lg\:col-span-1 {
    @media (width >= 64rem) {
      grid-column: span 1 / span 1;
    }
  }
  .lg\:col-span-4 {
    @media (width >= 64rem) {
      grid-column: span 4 / span 4;
    }
  }
  .lg\:col-start-2 {
    @media (width >= 64rem) {
      grid-column-start: 2;
    }
  }
  .lg\:col-start-5 {
    @media (width >= 64rem) {
      grid-column-start: 5;
    }
  }
  .lg\:col-start-6 {
    @media (width >= 64rem) {
      grid-column-start: 6;
    }
  }
  .lg\:col-end-3 {
    @media (width >= 64rem) {
      grid-column-end: 3;
    }
  }
  .lg\:col-end-6 {
    @media (width >= 64rem) {
      grid-column-end: 6;
    }
  }
  .lg\:col-end-7 {
    @media (width >= 64rem) {
      grid-column-end: 7;
    }
  }
  .lg\:mx-0 {
    @media (width >= 64rem) {
      margin-inline: var(--spacing-0);
    }
  }
  .lg\:my-6 {
    @media (width >= 64rem) {
      margin-block: var(--spacing-6);
    }
  }
  .lg\:mt-0 {
    @media (width >= 64rem) {
      margin-top: var(--spacing-0);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:h-auto {
    @media (width >= 64rem) {
      height: auto;
    }
  }
  .lg\:w-auto {
    @media (width >= 64rem) {
      width: auto;
    }
  }
  .lg\:max-w-3xl {
    @media (width >= 64rem) {
      max-width: var(--container-3xl);
    }
  }
  .lg\:max-w-4xl {
    @media (width >= 64rem) {
      max-width: var(--container-4xl);
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-5 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-6 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:place-content-between {
    @media (width >= 64rem) {
      place-content: space-between;
    }
  }
  .lg\:justify-start {
    @media (width >= 64rem) {
      justify-content: flex-start;
    }
  }
  .lg\:gap-\(--spacing-7\) {
    @media (width >= 64rem) {
      gap: var(--spacing-7);
    }
  }
  .lg\:gap-4 {
    @media (width >= 64rem) {
      gap: var(--spacing-4);
    }
  }
  .lg\:gap-7 {
    @media (width >= 64rem) {
      gap: var(--spacing-7);
    }
  }
  .lg\:justify-self-end {
    @media (width >= 64rem) {
      justify-self: flex-end;
    }
  }
  .lg\:border-0 {
    @media (width >= 64rem) {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .lg\:border-t {
    @media (width >= 64rem) {
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
    }
  }
  .lg\:border-t-0 {
    @media (width >= 64rem) {
      border-top-style: var(--tw-border-style);
      border-top-width: 0px;
    }
  }
  .lg\:border-red {
    @media (width >= 64rem) {
      border-color: var(--color-red);
    }
  }
  .lg\:bg-red {
    @media (width >= 64rem) {
      background-color: var(--color-red);
    }
  }
  .lg\:bg-transparent {
    @media (width >= 64rem) {
      background-color: transparent;
    }
  }
  .lg\:px-6 {
    @media (width >= 64rem) {
      padding-inline: var(--spacing-6);
    }
  }
  .lg\:py-0 {
    @media (width >= 64rem) {
      padding-block: var(--spacing-0);
    }
  }
  .lg\:pt-0 {
    @media (width >= 64rem) {
      padding-top: var(--spacing-0);
    }
  }
  .lg\:text-center {
    @media (width >= 64rem) {
      text-align: center;
    }
  }
  .lg\:text-left {
    @media (width >= 64rem) {
      text-align: left;
    }
  }
  .lg\:text-3xl {
    @media (width >= 64rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .lg\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-sm {
    @media (width >= 64rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .lg\:text-lg {
    @media (width >= 64rem) {
      font-size: var(--text-lg);
    }
  }
  .lg\:text-blue-900 {
    @media (width >= 64rem) {
      color: var(--color-blue-900);
    }
  }
  .lg\:after\:bottom-0 {
    @media (width >= 64rem) {
      &::after {
        content: var(--tw-content);
        bottom: var(--spacing-0);
      }
    }
  }
  .lg\:after\:bottom-\[0\] {
    @media (width >= 64rem) {
      &::after {
        content: var(--tw-content);
        bottom: 0;
      }
    }
  }
  .lg\:after\:bottom-\[25\%\] {
    @media (width >= 64rem) {
      &::after {
        content: var(--tw-content);
        bottom: 25%;
      }
    }
  }
  .lg\:after\:h-\[40\%\] {
    @media (width >= 64rem) {
      &::after {
        content: var(--tw-content);
        height: 40%;
      }
    }
  }
  .lg\:after\:h-\[50\%\] {
    @media (width >= 64rem) {
      &::after {
        content: var(--tw-content);
        height: 50%;
      }
    }
  }
  .lg\:after\:h-\[60\%\] {
    @media (width >= 64rem) {
      &::after {
        content: var(--tw-content);
        height: 60%;
      }
    }
  }
  .lg\:after\:w-\[40\%\] {
    @media (width >= 64rem) {
      &::after {
        content: var(--tw-content);
        width: 40%;
      }
    }
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
  body {
    color: var(--color-gray);
  }
  body:has(button.navigation-open) {
    overflow: hidden;
  }
  details[open] summary svg {
    transform: rotate(180deg);
    transition: transform .25s ease-in-out;
  }
  .show {
    display: block !important;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  inherits: false;
  initial-value: "";
}
